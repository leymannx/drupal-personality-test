<?php
/**
 * Implements hook_node_info()
 */
function personality_test_node_info() {
  return array(
    // machine_name
    'personality_test' => array(
      'name' => t('Personality Test'),
      'base' => 'personality_test', // name of module
      'description' => t('Create custom personality tests.'),
      'has_title' => TRUE,
      'title_label' => t('Title'),
    )
  );
}

/**
 * Implements hook_form(). Which is only the node form.
 */
function personality_test_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_node_view()
 */
function personality_test_node_view($node, $view_mode, $langcode) {
  $form = drupal_get_form('personality_test', $node);
  $node->content['personality_test'] = array(
    '#markup' => drupal_render($form),
  );
}

/**
 * Our actual form
 */
function personality_test($form, &$form_state, $node) {
  $i = 0;
  foreach ($node->personality_test_questions[LANGUAGE_NONE] as $item) {
    $i++;
    $index = sprintf("%02d", $i);

    $item_id = $item['value'];
    $entity = entity_load('field_collection_item', array($item_id));

    $question = $entity[$item_id]->personality_test_question_body[LANGUAGE_NONE][0]['value'];
    $options = array();
    foreach ($entity[$item_id]->personality_test_answers[LANGUAGE_NONE] as $option) {
      $option_id = $option['value'];
      $option_entity = entity_load('field_collection_item', array($option_id));
      $answer = $option_entity[$option_id]->personality_test_answer_body[LANGUAGE_NONE][0]['value'];
      $key = $option_entity[$option_id]->personality_test_answer_map[LANGUAGE_NONE][0];
      array_push($options, $answer);
    }

    $form['question_'.$index] = array(
      '#type' => 'radios',
      '#title' => $question,
      '#options' => $options
    );
  }

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}


